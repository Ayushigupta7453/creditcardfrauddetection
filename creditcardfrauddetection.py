# -*- coding: utf-8 -*-
"""creditcardFrauddetection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s3KOLuE4EcXl6CeZpc0mdkF-qle3sQpg
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

credit_card_data = pd.read_csv('/content/creditcard.csv')
credit_card_data.head()

credit_card_data.sample()

credit_card_data.info()

credit_card_data.isnull().sum()

credit_card_data['Class'].value_counts()

legit = credit_card_data[credit_card_data.Class==0]
fraud = credit_card_data[credit_card_data['Class']==1]

fraud['Class']

legit.Amount.describe()

fraud.shape

credit_card_data.groupby('Class').mean()

legit_sample = legit.sample(n=52)

new_df = pd.concat([legit_sample,fraud],axis=0)

new_df

new_df['Class'].value_counts()

X = new_df.drop(columns='Class', axis=1)
Y = new_df['Class']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

model=LogisticRegression()

model.fit(X_train,Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print('Accuracy on Training data : ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print('Accuracy on Training data : ', test_data_accuracy)

